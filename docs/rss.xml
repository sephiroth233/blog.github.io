<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>lang</title><link>https://sephiroth233.github.io/blog.github.io</link><description>随便写写~</description><copyright>lang</copyright><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><image><url>https://raw.githubusercontent.com/sephiroth233/blog.github.io/refs/heads/main/static/avatar.jpg</url><title>avatar</title><link>https://sephiroth233.github.io/blog.github.io</link></image><lastBuildDate>Mon, 28 Apr 2025 09:43:42 +0000</lastBuildDate><managingEditor>lang</managingEditor><ttl>60</ttl><webMaster>lang</webMaster><item><title>WSL Ubuntu + Docker 配置教程</title><link>https://sephiroth233.github.io/blog.github.io/post/WSL%20Ubuntu%20%2B%20Docker%20-pei-zhi-jiao-cheng.html</link><description>### WSL Ubuntu + Docker 配置教程

---

#### **1. 安装 WSL Ubuntu**

管理员身份打开 PowerShell

```powershell
wsl --install
```

- 官方文档：[Microsoft WSL 安装指南](https://docs.microsoft.com/zh-cn/windows/wsl/install)
- 安装后设置用户名/密码。</description><guid isPermaLink="true">https://sephiroth233.github.io/blog.github.io/post/WSL%20Ubuntu%20%2B%20Docker%20-pei-zhi-jiao-cheng.html</guid><pubDate>Thu, 27 Mar 2025 13:42:53 +0000</pubDate></item><item><title>建立虚假Emby验证服务器获得高级会员</title><link>https://sephiroth233.github.io/blog.github.io/post/jian-li-xu-jia-Emby-yan-zheng-fu-wu-qi-huo-de-gao-ji-hui-yuan.html</link><description>
声明：本文仅供学习研究,切勿用于非法用途

Emby通过服务器mb3admin.com验证客户端是否具有高级会员授权，一旦验证通过后，会在客户端内保留一段时间的缓存信息。</description><guid isPermaLink="true">https://sephiroth233.github.io/blog.github.io/post/jian-li-xu-jia-Emby-yan-zheng-fu-wu-qi-huo-de-gao-ji-hui-yuan.html</guid><pubDate>Wed, 26 Mar 2025 02:57:35 +0000</pubDate></item><item><title>Windows自用脚本</title><link>https://sephiroth233.github.io/blog.github.io/post/Windows-zi-yong-jiao-ben.html</link><description>mihomo内核辅助脚本：
```
curl -O https://raw.githubusercontent.com/sephiroth233/bat-reo/main/blash.cmd
```
JDK环境变量配置脚本：
```
curl -O https://raw.githubusercontent.com/sephiroth233/bat-reo/main/jdk.cmd
```
navicat使用脚本：
```
curl -O https://raw.githubusercontent.com/sephiroth233/bat-reo/main/navicat-reset.cmd
```。</description><guid isPermaLink="true">https://sephiroth233.github.io/blog.github.io/post/Windows-zi-yong-jiao-ben.html</guid><pubDate>Wed, 19 Feb 2025 06:00:30 +0000</pubDate></item><item><title>sing-box脚本</title><link>https://sephiroth233.github.io/blog.github.io/post/sing-box-jiao-ben.html</link><description>## 终端预览

![Image](https://github.com/user-attachments/assets/0069ba70-33a7-49ab-a85f-8a894277b4bd)

## 一键脚本(无warp)
1.直接执行脚本：
```
bash &lt;(curl -fsSL sing-box-mu.vercel.app)
```
2.保存脚本到本地并执行：
```
curl -fsSL sing-box-mu.vercel.app -o sing-box.sh &amp;&amp; bash sing-box.sh
```

## 一键脚本(有warp)
1.直接执行脚本：
```
bash &lt;(curl -fsSL sing-box-mu.vercel.app/warp)
```
2.保存脚本到本地并执行：
```
curl -fsSL sing-box-mu.vercel.app/warp -o sing-box-warp.sh &amp;&amp; bash sing-box-warp.sh
```

## 项目简介
- 输出客户端配置 url 方便快速设置

- 自带 wireguard 出站解锁 openai netflix disney 

- 安装 sing-box 配置 hy2 vless ss2022+shadowtls

## 安装 sing-box
下载sing-box
```
bash &lt;(curl -fsSL https://sing-box.app/deb-install.sh)
```
修改/etc/sing-box/config.json
```
nano /etc/sing-box/config.json
```
查看config.json
```
cat /etc/sing-box/config.json
```
检查config.json
```
sing-box check -c /etc/sing-box/config.json
```
启动config.json
```
sing-box run -c /etc/sing-box/config.json
```
启动系统服务
```
systemctl enable sing-box
```
启动sing-box
```
systemctl start sing-box
```
停止sing-box
```
systemctl stop sing-box
```
重启sing-box
```
systemctl restart sing-box
```
查看sing-box
```
systemctl status sing-box
```
查看sing-box日志
```
cat /var/log/singbox.log
```
实时sing-box日志
```
tail -f /var/log/singbox.log
```
解码openai.srs
```
sing-box rule-set decompile geosite-openai.srs
```


## 卸载 sing-box
禁用sing-box
```
systemctl stop sing-box.service
systemctl disable sing-box.service
```
卸载sing-box
```
dpkg --purge sing-box
```
删除sing-box
```
rm -rf /etc/sing-box
rm -f /var/log/singbox.log
```
重载systemd
```
systemctl daemon-reload
```

## 原作者项目地址：https://github.com/passeway/sing-box
## fork仓库地址：https://github.com/sephiroth233/sing-box。</description><guid isPermaLink="true">https://sephiroth233.github.io/blog.github.io/post/sing-box-jiao-ben.html</guid><pubDate>Wed, 12 Feb 2025 03:57:15 +0000</pubDate></item><item><title>Windows一键配置Java环境变量</title><link>https://sephiroth233.github.io/blog.github.io/post/Windows-yi-jian-pei-zhi-Java-huan-jing-bian-liang.html</link><description>脚本内容：&#13;
&#13;
```shell&#13;
@echo off&#13;
chcp 65001&#13;
setlocal enabledelayedexpansion&#13;
&#13;
REM 提示用户输入JDK路径&#13;
:input_jdk_path&#13;
set /p jdk_path=请输入JDK的安装路径（例如：C:\Program Files\Java\jdk1.8.0_221）：&#13;
&#13;
REM 检查路径是否存在&#13;
if not exist '%jdk_path%' (&#13;
    echo JDK路径无效或不存在，请检查路径后重试。</description><guid isPermaLink="true">https://sephiroth233.github.io/blog.github.io/post/Windows-yi-jian-pei-zhi-Java-huan-jing-bian-liang.html</guid><pubDate>Sun, 17 Nov 2024 09:35:26 +0000</pubDate></item><item><title>Navicat无限试用脚本</title><link>https://sephiroth233.github.io/blog.github.io/post/Navicat-wu-xian-shi-yong-jiao-ben.html</link><description>```shell&#13;
@echo off&#13;
echo Delete HKEY_CURRENT_USER\Software\PremiumSoft\NavicatPremium\Update&#13;
reg delete HKEY_CURRENT_USER\Software\PremiumSoft\NavicatPremium\Update /f&#13;
echo Delete HKEY_CURRENT_USER\Software\PremiumSoft\NavicatPremium\Registration[version and language]&#13;
for /f %%i in (''REG QUERY 'HKEY_CURRENT_USER\Software\PremiumSoft\NavicatPremium' /s | findstr /L Registration'') do (&#13;
    reg delete %%i /va /f&#13;
)&#13;
&#13;
echo Delete Info and ShellFolder under HKEY_CURRENT_USER\Software\Classes\CLSID&#13;
for /f 'tokens=*' %%a in ('reg query 'HKEY_CURRENT_USER\Software\Classes\CLSID'') do (&#13;
  for /f 'tokens=*' %%l in ('reg query '%%a' /f 'Info' /s /e ^| findstr /i 'Info'') do (&#13;
    echo Delete: %%a&#13;
    reg delete %%a /f&#13;
  )&#13;
  for /f 'tokens=*' %%l in ('reg query '%%a' /f 'ShellFolder' /s /e ^| findstr /i 'ShellFolder'') do (&#13;
    echo Delete: %%a&#13;
    reg delete %%a /f&#13;
  )&#13;
)&#13;
```&#13;
&#13;
新建一个txt文件，名字随意，以reset.txt为例：&#13;
&#13;
复制上面的脚本代码，将代码粘贴到reset.txt文件中。</description><guid isPermaLink="true">https://sephiroth233.github.io/blog.github.io/post/Navicat-wu-xian-shi-yong-jiao-ben.html</guid><pubDate>Fri, 19 Jul 2024 02:27:50 +0000</pubDate></item><item><title>一键dd纯净系统(leitbogioro)</title><link>https://sephiroth233.github.io/blog.github.io/post/yi-jian-dd-chun-jing-xi-tong-%28leitbogioro%29.html</link><description>&#13;
[github地址](https://github.com/leitbogioro/Tools 'https://github.com/leitbogioro/Tools')&#13;
&#13;
#### Centos7：&#13;
&#13;
```nginx&#13;
wget --no-check-certificate -qO InstallNET.sh 'https://raw.githubusercontent.com/leitbogioro/Tools/master/Linux_reinstall/InstallNET.sh'  \&#13;
&amp;&amp; chmod a+x InstallNET.sh &amp;&amp; bash InstallNET.sh -centos 7 -pwd '密码'&#13;
```&#13;
&#13;
#### Debian12：&#13;
&#13;
```nginx&#13;
wget --no-check-certificate -qO InstallNET.sh 'https://raw.githubusercontent.com/leitbogioro/Tools/master/Linux_reinstall/InstallNET.sh' \&#13;
&amp;&amp; chmod a+x InstallNET.sh &amp;&amp; bash InstallNET.sh -debian 12 -pwd '密码'&#13;
```&#13;
&#13;
#### Ubuntu 22.04：&#13;
&#13;
ps：ubuntu不支持自定义密码&#13;
&#13;
```nginx&#13;
wget --no-check-certificate -qO InstallNET.sh 'https://raw.githubusercontent.com/leitbogioro/Tools/master/Linux_reinstall/InstallNET.sh' \&#13;
&amp;&amp; chmod a+x InstallNET.sh &amp;&amp; bash InstallNET.sh -ubuntu &#13;
```&#13;
&#13;
#### Windows11：&#13;
&#13;
```nginx&#13;
wget --no-check-certificate -qO InstallNET.sh 'https://raw.githubusercontent.com/leitbogioro/Tools/master/Linux_reinstall/InstallNET.sh' \&#13;
&amp;&amp; chmod a+x InstallNET.sh &amp;&amp; bash InstallNET.sh -windows&#13;
&#13;
```&#13;
&#13;
#### 重点：&#13;
&#13;
默认用户名:&#13;
对于 Linux：`root`&#13;
对于 Windows：`Administrator`&#13;
&#13;
默认密码：&#13;
对于 Linux：`LeitboGi0ro`&#13;
对于 Windows：`Teddysun.com`&#13;
&#13;
修改密码：&#13;
&#13;
```nginx&#13;
echo root:password|sudo chpasswd root&#13;
```&#13;
&#13;
![image.png](https://s2.loli.net/2024/06/03/aBHbFomGSMsxT8Z.png)&#13;
。</description><guid isPermaLink="true">https://sephiroth233.github.io/blog.github.io/post/yi-jian-dd-chun-jing-xi-tong-%28leitbogioro%29.html</guid><pubDate>Fri, 19 Jul 2024 02:18:10 +0000</pubDate></item><item><title>微软输入法设置小鹤双拼</title><link>https://sephiroth233.github.io/blog.github.io/post/wei-ruan-shu-ru-fa-she-zhi-xiao-he-shuang-pin.html</link><description>打开PowerShell，输入：&#13;
```shell&#13;
reg add HKCU\Software\Microsoft\InputMethod\Settings\CHS /v UserDefinedDoublePinyinScheme0 /t REG_SZ /d '小鹤双拼*2*^*iuvdjhcwfg^xmlnpbksqszxkrltvyovt' /f&#13;
```&#13;
然后回车。</description><guid isPermaLink="true">https://sephiroth233.github.io/blog.github.io/post/wei-ruan-shu-ru-fa-she-zhi-xiao-he-shuang-pin.html</guid><pubDate>Fri, 19 Jul 2024 02:17:24 +0000</pubDate></item><item><title>windows数字激活</title><link>https://sephiroth233.github.io/blog.github.io/post/windows-shu-zi-ji-huo.html</link><description>[Microsoft Activation Scripts](https://github.com/massgravel/Microsoft-Activation-Scripts 'Microsoft Activation Scripts')（简称MAS），具备HWID/KMS38/在线KMS激活Microsoft，这款批处理版KMS激活脚本最大特色是代码开源，小巧不误报。</description><guid isPermaLink="true">https://sephiroth233.github.io/blog.github.io/post/windows-shu-zi-ji-huo.html</guid><pubDate>Fri, 19 Jul 2024 02:16:30 +0000</pubDate></item><item><title>vps脚本</title><link>https://sephiroth233.github.io/blog.github.io/post/vps-jiao-ben.html</link><description>### 测速脚本

[项目地址](https://github.com/i-abc/Speedtest 'https://github.com/i-abc/Speedtest')

```shell
sudo bash &lt;(curl -sL bash.icu/speedtest)  
```

```shell
sudo bash &lt;(curl -sL https://raw.githubusercontent.com/i-abc/Speedtest/main/speedtest.sh)
```

### 流媒体解锁检测

```shell
sudo bash &lt;(curl -L -s check.unlock.media)
```

### 三网回城路由测试

[项目地址](https://github.com/zhanghanyun/backtrace 'https://github.com/zhanghanyun/backtrace')

```shell
sudo curl https://raw.githubusercontent.com/zhanghanyun/backtrace/main/install.sh -sSf | sh
```

### ip质量检测

```shell
sudo bash &lt;(curl -Ls IP.Check.Place)
```
。</description><guid isPermaLink="true">https://sephiroth233.github.io/blog.github.io/post/vps-jiao-ben.html</guid><pubDate>Fri, 19 Jul 2024 02:14:10 +0000</pubDate></item><item><title>clash-meta懒人配置</title><link>https://sephiroth233.github.io/blog.github.io/post/clash-meta-lan-ren-pei-zhi.html</link><description>在clash系列软件中新建一个本地配置，然后将下面的内容复制、粘贴。</description><guid isPermaLink="true">https://sephiroth233.github.io/blog.github.io/post/clash-meta-lan-ren-pei-zhi.html</guid><pubDate>Fri, 19 Jul 2024 01:59:55 +0000</pubDate></item></channel></rss>